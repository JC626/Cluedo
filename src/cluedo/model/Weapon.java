package cluedo.model;

/**
 * A potential murder weapon, found in one of the Rooms.
 * Contains a Displayable aspect that is drawn by the UI.
 * Each Weapon has a final unique ID, which can be used to distinguish one Weapon from another.
 */
public class Weapon
{
	/**
	 * Used to generate unique IDs for the weapons - will increment by one per Weapon created.
	 */
	private static int generateID = 0;
	
	/**
	 * The unique ID for this Weapon, can be used to distinguish different Weapons.
	 */
	private final int uniqueID;
	
	/**
	 * The human readable name of this Weapon.
	 * May not be empty.
	 * May not be null.
	 * Example: Lead Pipe
	 */
	private final String name;

	/**
	 * The Piece that represents the Weapon on the Board.
	 * May not be null.
	 */
	private final Piece piece;

	/**
	 * A potential murder Weapon.
	 * @param name The human readable name of the Weapon. May not be empty, or null.
	 * @param piece The Piece that represents the Weapon on the Board. May not be null.
	 */
	public Weapon(String name, Piece piece)
	{
		if (name == null || piece == null)
		{
			throw new IllegalArgumentException("Arguments may not be null");
		}

		if (name.equals(""))
		{
			throw new IllegalArgumentException("Name must be a non empty string");
		}

		this.name = name;
		this.piece = piece;
		
		this.uniqueID = generateID;
		generateID++;
	}
	
	/**
	 * The unique ID for this Weapon, can be used to distinguish different Weapons.
	 * @return an unchanging unique integer ID for this Weapon.
	 */
	public int getID()
	{
		return uniqueID;
	}
	
	/**
	 * Will not be null.
	 * @return The name associated with this Weapon.
	 */
	String getName()
	{
		return name;
	}
	
	/**
	 * Will not be null.
	 * @return The Piece associated with this Weapon.
	 */
	Piece getPiece()
	{
		return piece;
	}
	
	/**
	 * Two Weapons are considered equal iff their IDs are are equal.
	 * Note that this allows for safe name and Piece reuse between Weapons.
	 */
	public boolean equals(Object o)
	{
		boolean isEqual = false;

		if (o instanceof Weapon)
		{
			Weapon p = (Weapon) o;
			isEqual = this.getID() == p.getID();
		}

		return isEqual;
	}

	/**
	 * Default hashcode as generated by Eclipse.
	 */
	@Override
	public int hashCode()
	{
		final int prime = 31;
		int result = 1;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + ((piece == null) ? 0 : piece.hashCode());
		return result;
	}
}